[{"categories":["化工天坑"],"content":"Modbus RTU通讯协议 Modbus全球最早用于工业现场的总线规约，Modbus通信协议具有多个变种，其具有支持串口（主要是RS-485 总线），以太网多个版本，其中最著名的是Modbus RTU，Modbus ASCI和Modbus TCP三种。其中Modbus RTU与Modbus ASCII均为支持RS-485总线的通信协议，其中Modbus RTU由于其采用二进制表现形式以及紧数据结构，通信效率较高，应用比较广泛。 TCP/UDP协议 TCP和UDP协议是TCP/IP协议的核心。TCP协议是一TCP（Transmission Control Protol）和UDP（User Datagram Protocol）协议属于传输层协议。其中TCP提供IP环境下的数据可靠传输，它提供的服务包括数据流传送、可靠性、有效流控、全双工操作和多路复用。UDP（用户数据报协议）是一个简单的面向数据报的传输层协议。提供的是非面向连接的、不可靠的数据流传输。UDP不提供可靠性，也不提供报文到达确认、排序以及流量控制等功能。 Modbus RTU通讯协议和TCP/UDP协议的区别 1、Modbus协议属于应用层（OSI模型第7层）协议，TCP/UDP协议属于传输层（OSI模型第4层）协议，两者层级不是并列关系。 打个比喻，Modbus协议就像公司里的总经理，TCP/UDP协议就像公司里的轿车、商务车。某天总经理要到机场去乘飞机，他可以选择∶1）自己开轿车去，2）让司机开商务车送去，3）搭的士/公交车过去。若选择1），那就是总经理-轿车的关系，Modbus TCP协议就形同这种关系。若选择3），就形同另外的Modbus RTU/ASCI协议的关系。 2、Modbus协议是一种已广泛应用于当今工业控制领域的通用通讯协议。通过此协议，控制器相互之间、或控制器经由网络（如以太网）可以和其它设备之间进行通信。Modbus协议使用的是主从通讯技术，即由主设备主动查询和操作从设备。一般将主控设备方所使用的协议称为Modbus Master，从设备方使用的协议称为Modbus Slave。典型的主设备包括工控机和工业控制器等；典型的从设备如PLC可编程控制器等。Modbus通讯物理接口可以选用串口（包括RS232和RS485），也可以选择以太网口。 3、而Modbus TCP协议则是在RTU协议上加一个MBAP报文头，由于TCP是基于可靠连接的服务，RTU协议中的CRC校验码就不再需要，所以在Modbus TCP协议中是没有CRC校验码，用一句比较通俗的话说就是∶Modbus TCP协议就是Modbus RTU协议在前面加上五个0以及一个6，然后去掉两个CRC校验码字节就OK.虽然这句话说得不是特别准确，但是也基本上把RTU与TCP之间的区别说得比较清楚了。 ","date":"2022-11-15","objectID":"/liushu258/modbus/:0:0","tags":["接口"],"title":"Modbus","uri":"/liushu258/modbus/"},{"categories":[""],"content":"“圣泰研发小菜鸡” ","date":"2022-11-15","objectID":"/liushu258/about/:0:0","tags":[""],"title":"About","uri":"/liushu258/about/"},{"categories":["前端菜鸟"],"content":"React ","date":"2022-11-15","objectID":"/liushu258/react%E8%B7%AF%E7%BA%BF%E5%9B%BE/:0:0","tags":["路线图"],"title":"REACT路线图","uri":"/liushu258/react%E8%B7%AF%E7%BA%BF%E5%9B%BE/"},{"categories":["前端菜鸟"],"content":"Fundamental Topics Create React App JSX Components Functional Components Class Components Props vs State Conditional Rendering Component Life Cycle Lists and keys Composition Vs Inheritance Basic Hooks useEffect useState ","date":"2022-11-15","objectID":"/liushu258/react%E8%B7%AF%E7%BA%BF%E5%9B%BE/:1:0","tags":["路线图"],"title":"REACT路线图","uri":"/liushu258/react%E8%B7%AF%E7%BA%BF%E5%9B%BE/"},{"categories":["前端菜鸟"],"content":"Advanced Topics Hooks Writing your Own Hooks Common Hooks useRef useCallback useMemo useReducer useContext Context Refs Render Props Code Splitting High Order Components Portals Error Boundaries Fiber Architecture ","date":"2022-11-15","objectID":"/liushu258/react%E8%B7%AF%E7%BA%BF%E5%9B%BE/:2:0","tags":["路线图"],"title":"REACT路线图","uri":"/liushu258/react%E8%B7%AF%E7%BA%BF%E5%9B%BE/"},{"categories":["前端菜鸟"],"content":"Ecosystem Routers React Router Reach Router SSR Next.js SSG Next.js Gatsby API Calls Apollo Relay Modern Axios Unfetch superagent use-http Mobile React Native Forms React Hook Form Formik Final Form Testing Jest React Testing Library Cypress StateManagement Context/State Redux Mobx Styling Styled Components Emotion Chakra UI Material UI Ant Design ","date":"2022-11-15","objectID":"/liushu258/react%E8%B7%AF%E7%BA%BF%E5%9B%BE/:3:0","tags":["路线图"],"title":"REACT路线图","uri":"/liushu258/react%E8%B7%AF%E7%BA%BF%E5%9B%BE/"},{"categories":["化工天坑"],"content":"从原油到化学品七大炼化工艺 石油炼化常用的工艺流程为常减压蒸馏、催化裂化、延迟焦化、加氢裂化、溶剂脱沥青、加氢精制、催化重整。 从原油到石油的基本途径一般为：① 将原油先按不同产品的沸点要求，分割成不同的直馏馏分油，然后按照产品的质量标准要求，除去这些馏分油中的非理想组分；② 通过化学反应转化，生成所需要的组分，进而得到一系列合格的石油产品。 1.常减压蒸馏 **1.原料：**原油等。 **2.产品：**石脑油、粗柴油（瓦斯油）、渣油、沥青、减一线。 3.基本概念 常减压蒸馏是常压蒸馏和减压蒸馏的合称，基本属物理过程：原料油在蒸馏塔里按蒸发能力分成沸点范围不同的油品（称为馏分），这些油有的经调合、加添加剂后以产品形式出厂，相当大的部分是后续加工装置的原料。常减压蒸馏是炼油厂石油加工的第一道工序，称为原油的一次加工，包括三个工序：a.原油的脱盐、脱水；b.常压蒸馏；c.减压蒸馏。 4.生产工艺 原油一般是带有盐份和水，能导致设备的腐蚀，因此原油在进入常减压之前首先进行脱盐脱水预处理，通常是加入破乳剂和水。原油经过流量计、换热部分、沏馏塔形成两部分，一部分形成塔顶油，经过冷却器、流量计，最后进入罐区，这一部分是化工轻油（即所谓的石脑油）；一部分形成塔底油，再经过换热部分，进入常压炉、常压塔，形成三部分，一部分柴油，一部分蜡油，一部分塔底油；剩余的塔底油在经过减压炉，减压塔，进一步加工，生成减一线、蜡油、渣油和沥青。各自的收率：石脑油（轻汽油或化工轻油）占1%左右，柴油占20%左右，蜡油占30%左右，渣油和沥青约占42%左右，减一线约占5%左右。常减压工序是不生产汽油产品的，其中蜡油和渣油进入催化裂化环节，生产汽油、柴油、煤油等成品油；石脑油直接出售由其他小企业生产溶剂油或者进入下一步的深加工，一般是催化重整生产溶剂油或提取萃类化合物；减一线可以直接进行调剂润滑油。 2.催化裂化 一般原油经过常减压蒸馏后可得到的汽油，煤油及柴油等轻质油品仅有10～40％ ，其余的是重质馏分油和残渣油。如果想得到更多轻质油品，就必须对重质馏分和残渣油进行二次加工。催化裂化是最常用的生产汽油、柴油生产工序，汽油柴油主要是通过该工艺生产出来。这也是一般石油炼化企业最重要的生产的环节。 1.原料 渣油和蜡油70%左右，催化裂化一般是以减压馏分油和焦化蜡油为原料，但是随着原油日益加重以及对轻质油越来越高的需求，大部分石炼化企业开始在原料中搀加减压渣油，甚至直接以常压渣油作为原料进行炼制。 **2.产品 **汽油、柴油、油浆（重质馏分油）、液体丙烯、液化气；各自占比汽油占42%，柴油占21.5%,丙烯占5.8%,液化气占8%,油浆占12%。 **3.基本概念 **催化裂化是在有催化剂存在的条件下，将重质油（例如渣油）加工成轻质油（汽油、煤油、柴油）的主要工艺，是炼油过程主要的二次加工手段。属于化学加工过程。 4.生产工艺 常渣和腊油经过原料油缓冲罐进入提升管、沉降器、再生器形成油气，进入分馏塔。一部分油气进入粗汽油塔、吸收塔、空压机进入凝缩油罐，经过再吸收塔、稳定塔、最后进行汽油精制，生产出汽油。一部分油气经过分馏塔进入柴油汽提塔，然后进行柴油精制，生产出柴油。一部分油气经过分馏塔进入油浆循环，最后生产出油浆。一部分油气经分馏塔进入液态烃缓冲罐，经过脱硫吸附罐、砂滤塔、水洗罐、脱硫醇抽提塔、预碱洗罐、胺液回收器、脱硫抽提塔、缓冲塔，最后进入液态烃罐，形成液化气。一部分油气经过液态烃缓冲罐进入脱丙烷塔、回流塔、脱乙烷塔、精丙稀塔、回流罐，最后进入丙稀区球罐，形成液体丙稀。液体丙稀再经过聚丙稀车间的进一步加工生产出聚丙稀。 3. 延迟焦化 焦炭化(简称焦化)是深度热裂化过程，也是处理渣油的手段之一。它又是唯一能生产石油焦的工艺过程，是任何其他过程所无法代替的。尤其是某些行业对优质石油焦的特殊需求，致使焦化过程在炼油工业中一直占据着重要地位。 1.原料延迟焦化与催化裂化类似的脱碳工艺以改变石油的碳氢比，延迟焦化的原料可以是重油、渣油甚至是沥青，对原料的品质要求比较低。渣油主要的转化工艺是延迟焦化和加氢裂化。 2.产品主要产品是蜡油、柴油、焦碳、粗汽油和部分气体，各自比重分别是：蜡油占23-33%，柴油22-29%，焦碳15-25%，粗汽油8-16%，气体7-10%，外甩油1-3%。 3.基本概念焦化是以贫氢重质残油(如减压渣油、裂化渣油以及沥青等)为原料，在高温(400～500℃)下进行深度热裂化反应。通过裂解反应，使渣油的一部分转化为气体烃和轻质油品；由于缩合反应，使渣油的另一部分转化为焦炭。一方面由于原料重，含相当数量的芳烃，另一方面焦化的反应条件更加苛刻，因此缩合反应占很大比重，生成焦炭多。 4.生产工艺延迟焦化装置的生产工艺分为焦化和除焦两部分，焦化为连续操作，除焦为间隙操作。由于工业装置一般设有两个或四个焦炭塔，所以整个生产过程仍为连续操作。原油预热，焦化原料(减压渣油)先进入原料缓冲罐，再用泵送入加热炉对流段升温至340~350 ℃ 左右。经预热后的原油进入分馏塔底，与焦炭塔产出的油气在分馏塔内（塔底温度不超过400℃）换热。原料油和循环油一起从分馏塔底抽出，用热油泵打进加热炉辐射段，加热到焦化反应所需的温度（500 ℃ 左右），再通过四通阀由下部进入焦炭塔，进行焦化反应。原料在焦炭塔内反应生成焦炭聚积在焦炭塔内，油气从焦炭塔顶出来进入分馏塔，与原料油换热后，经过分馏得到气体、汽油、柴油和蜡油。塔底循环油和原料一起再进行焦化反应。 4.加氢裂化 重油轻质化基本原理是改变油品的相对分子质量和氢碳比，而改变相对分子质量和氢碳比往往是同时进行的。改变油品的氢碳比有两条途径，一是脱碳，二是加氢。 **1.原料：**重质油等 **2.产品：**轻质油（汽油、煤油、柴油或催化裂化、裂解制烯烃的原料） 3.基本概念 加氢裂化属于石油加工过程的加氢路线，是在催化剂存在下从外界补入氢气以提高油品的氢碳比。加氢裂化实质上是加氢和催化裂化过程的有机结合，一方面能使重质油品通过裂化反应转化为汽油、煤油和柴油等轻质油品，另一方面又可防止像催化裂化那样生成大量焦炭，而且还可将原料中的硫、氯、氧化合物杂质通过加氢除去，使烯烃饱和。 4.生产流程按反应器中催化剂所处的状态不同，可分为固定床、沸腾床和悬浮床等几种型式。 （1）固定床加氢裂化 固定床是指将颗粒状的催化剂放置在反应器内，形成静态催化剂床层。原料油和氢气经升温、升压达到反应条件后进入反应系统，先进行加氢精制以除去硫、氮、氧杂质和二烯烃，再进行加氢裂化反应。反应产物经降温、分离、降压和分馏后，目的产品送出装置，分离出含氢较高 （80％，90％）的气体，作为循环氢使用。未转化油(称尾油)可以部分循环、全部循环或不循环一次通过。 （2）沸腾床加氢裂化 沸腾床(又称膨胀床)工艺是借助于流体流速带动具有一定颗粒度的催化剂运动，形成气、液、固三相床层，从而使氢气、原料油和催化剂充分接触而完成加氢反应过程。沸腾床工艺可以处理金属含量和残炭值较高的原料(如减压渣油)．并可使重油深度转化；但反应温度较高，一般在400~450℃范围内。此种工艺比较复杂，国内尚未工业化。 （3）悬浮床(浆液床)加氢工艺 悬浮床工艺是为了适应非常劣质的原料而重新得到重视的一种加氢工艺。其原理与沸腾床相类似，其基本流程是以细粉状催化剂与原料预先混合，再与氢气一向进入反应器自下而上流动，催化剂悬浮于液相中，进行加氢裂化反应，催化剂随着反应产物一起从反应器顶部流出。该装置能加工各种重质原油和普通原油渣油，但装置投资大。该工艺目前在国内尚属研究开发阶段。 5.溶剂脱沥青 溶剂脱沥青是一个劣质渣油的预处理过程。用萃取的方法，从原油蒸馏所得的减压渣油（有时也从常压渣油）中，除去胶质和沥青，以制取脱沥青油同时生产石油沥青的一种石油产品精制过程。 **1.原料：**减压渣油或者常压渣油等重质油 **2.产品：**脱沥青油等 **3.基本概念 **溶剂脱沥青是加工重质油的一种石油炼制工艺，其过程是以减压渣油等重质油为原料，利用丙烷、丁烷等烃类作为溶剂进行萃取，萃取物即脱沥青油可做重质润滑油原料或裂化原料，萃余物脱油沥青可做道路沥青或其他用途。 4.生产流程 包括萃取和溶剂回收。萃取部分一般采取一段萃取流程，也可采取二段萃取流程。 沥青与重脱沥青油溶液中含丙烷少，采用一次蒸发及汽提回收丙烷，轻脱沥青油溶液中含丙烷较多，采用多效蒸发及汽提或临界回收及汽提回收丙烷，以减少能耗。临界回收过程，是利用丙烷在接近临界温度和稍高于临界压力(丙烷的临界温度96.8℃、临界压力4.2MPa)的条件下，对油的溶解度接近于最小以及其密度也接近于最小的性质，使轻脱沥青油与大部分丙烷在临界塔内沉降、分离，从而避免了丙烷的蒸发冷凝过程，因而可较多地减少能耗。 国内的溶剂脱沥青工艺流程主要有沉降法二段脱沥青工艺、临界回收脱沥青工艺、超临界抽提溶剂脱沥青工艺。 (1)沉降法二段脱沥青工艺沉降法两段脱沥青是在常规一段脱沥青基础上发展起来的。在研究大庆减压渣油的特有性质的基础上，注意到常规的丙烷脱沥青不能充分利用好该资源，而开发出的一种新脱沥青工艺 (2)临界回收脱沥青工艺溶剂对油的溶解能力随温度的升高而降低，当温度和压力接近到临界条件时，溶剂对油的溶解能力已降到很低，这时，该丙烷溶剂经冷却后可直接循环使用，不必经过蒸发回收。 (3)超临界抽提溶剂脱沥青工艺**超临界流体抽提是利用抽提体系在临界区附近具有反常的相平衡特性及异常的热力学性质，通过改变温度、压力等参数，使体系内组分间的相互溶解度发生剧烈变化，从而实现组分分离的技术。 6.加氢精","date":"2022-11-15","objectID":"/liushu258/test/:0:0","tags":["化工工艺"],"title":"test","uri":"/liushu258/test/"},{"categories":["前端菜鸟"],"content":"Front-end ","date":"2022-11-15","objectID":"/liushu258/%E5%89%8D%E7%AB%AF%E8%B7%AF%E7%BA%BF%E5%9B%BE/:0:0","tags":["路线图"],"title":"前端路线图","uri":"/liushu258/%E5%89%8D%E7%AB%AF%E8%B7%AF%E7%BA%BF%E5%9B%BE/"},{"categories":["前端菜鸟"],"content":"Internet How does the internet work？ What is HTTP? Browsers and how they work? DNS and how it works? What is Domain Name? What is hosting？ ","date":"2022-11-15","objectID":"/liushu258/%E5%89%8D%E7%AB%AF%E8%B7%AF%E7%BA%BF%E5%9B%BE/:1:0","tags":["路线图"],"title":"前端路线图","uri":"/liushu258/%E5%89%8D%E7%AB%AF%E8%B7%AF%E7%BA%BF%E5%9B%BE/"},{"categories":["前端菜鸟"],"content":"HTML Learn the basics Writing Semantic HTML Forms and Validations Conventions and Best Practices Accessibility SEO Basics ","date":"2022-11-15","objectID":"/liushu258/%E5%89%8D%E7%AB%AF%E8%B7%AF%E7%BA%BF%E5%9B%BE/:1:1","tags":["路线图"],"title":"前端路线图","uri":"/liushu258/%E5%89%8D%E7%AB%AF%E8%B7%AF%E7%BA%BF%E5%9B%BE/"},{"categories":["前端菜鸟"],"content":"CSS Learn the basic Making Layouts Floats Positioning Display Box Mode CSS Grid Flex Box Responsive design and Media Queries ","date":"2022-11-15","objectID":"/liushu258/%E5%89%8D%E7%AB%AF%E8%B7%AF%E7%BA%BF%E5%9B%BE/:2:0","tags":["路线图"],"title":"前端路线图","uri":"/liushu258/%E5%89%8D%E7%AB%AF%E8%B7%AF%E7%BA%BF%E5%9B%BE/"},{"categories":["前端菜鸟"],"content":"JavaScript Syntax and Basic Constructs Learn DOM Manipulation Learn Fetch API/Ajax (XHR) ES6+ and modular JavaScript Understand the concepts Hoisting,Event Bubbling,Scope Prototype, Shadow DOM, strict ","date":"2022-11-15","objectID":"/liushu258/%E5%89%8D%E7%AB%AF%E8%B7%AF%E7%BA%BF%E5%9B%BE/:3:0","tags":["路线图"],"title":"前端路线图","uri":"/liushu258/%E5%89%8D%E7%AB%AF%E8%B7%AF%E7%BA%BF%E5%9B%BE/"},{"categories":["前端菜鸟"],"content":"Version Cotrol Systems ","date":"2022-11-15","objectID":"/liushu258/%E5%89%8D%E7%AB%AF%E8%B7%AF%E7%BA%BF%E5%9B%BE/:4:0","tags":["路线图"],"title":"前端路线图","uri":"/liushu258/%E5%89%8D%E7%AB%AF%E8%B7%AF%E7%BA%BF%E5%9B%BE/"},{"categories":["前端菜鸟"],"content":"Basic Usage of Gits ","date":"2022-11-15","objectID":"/liushu258/%E5%89%8D%E7%AB%AF%E8%B7%AF%E7%BA%BF%E5%9B%BE/:4:1","tags":["路线图"],"title":"前端路线图","uri":"/liushu258/%E5%89%8D%E7%AB%AF%E8%B7%AF%E7%BA%BF%E5%9B%BE/"},{"categories":["前端菜鸟"],"content":"Repo Hosting Services create account and learn to use Github github gitlab bitbucket ","date":"2022-11-15","objectID":"/liushu258/%E5%89%8D%E7%AB%AF%E8%B7%AF%E7%BA%BF%E5%9B%BE/:4:2","tags":["路线图"],"title":"前端路线图","uri":"/liushu258/%E5%89%8D%E7%AB%AF%E8%B7%AF%E7%BA%BF%E5%9B%BE/"},{"categories":["前端菜鸟"],"content":"Web Security Knowledge Get at least a basic knowledge of all of these HTTPS Content Security Policy CORS OWASP Security Risks ","date":"2022-11-15","objectID":"/liushu258/%E5%89%8D%E7%AB%AF%E8%B7%AF%E7%BA%BF%E5%9B%BE/:5:0","tags":["路线图"],"title":"前端路线图","uri":"/liushu258/%E5%89%8D%E7%AB%AF%E8%B7%AF%E7%BA%BF%E5%9B%BE/"},{"categories":["前端菜鸟"],"content":"Package Managers npm yarn ","date":"2022-11-15","objectID":"/liushu258/%E5%89%8D%E7%AB%AF%E8%B7%AF%E7%BA%BF%E5%9B%BE/:6:0","tags":["路线图"],"title":"前端路线图","uri":"/liushu258/%E5%89%8D%E7%AB%AF%E8%B7%AF%E7%BA%BF%E5%9B%BE/"},{"categories":["前端菜鸟"],"content":"CSS Architecture BEM OOCSS SMACSS ","date":"2022-11-15","objectID":"/liushu258/%E5%89%8D%E7%AB%AF%E8%B7%AF%E7%BA%BF%E5%9B%BE/:7:0","tags":["路线图"],"title":"前端路线图","uri":"/liushu258/%E5%89%8D%E7%AB%AF%E8%B7%AF%E7%BA%BF%E5%9B%BE/"},{"categories":["前端菜鸟"],"content":"CSS Preprocessors Sass PostCSS Less ","date":"2022-11-15","objectID":"/liushu258/%E5%89%8D%E7%AB%AF%E8%B7%AF%E7%BA%BF%E5%9B%BE/:8:0","tags":["路线图"],"title":"前端路线图","uri":"/liushu258/%E5%89%8D%E7%AB%AF%E8%B7%AF%E7%BA%BF%E5%9B%BE/"},{"categories":["前端菜鸟"],"content":"Build Tools ","date":"2022-11-15","objectID":"/liushu258/%E5%89%8D%E7%AB%AF%E8%B7%AF%E7%BA%BF%E5%9B%BE/:9:0","tags":["路线图"],"title":"前端路线图","uri":"/liushu258/%E5%89%8D%E7%AB%AF%E8%B7%AF%E7%BA%BF%E5%9B%BE/"},{"categories":["前端菜鸟"],"content":"Task Runners npm scripts Gulp ","date":"2022-11-15","objectID":"/liushu258/%E5%89%8D%E7%AB%AF%E8%B7%AF%E7%BA%BF%E5%9B%BE/:9:1","tags":["路线图"],"title":"前端路线图","uri":"/liushu258/%E5%89%8D%E7%AB%AF%E8%B7%AF%E7%BA%BF%E5%9B%BE/"},{"categories":["前端菜鸟"],"content":"module bundlers webpack rollup parcel ","date":"2022-11-15","objectID":"/liushu258/%E5%89%8D%E7%AB%AF%E8%B7%AF%E7%BA%BF%E5%9B%BE/:9:2","tags":["路线图"],"title":"前端路线图","uri":"/liushu258/%E5%89%8D%E7%AB%AF%E8%B7%AF%E7%BA%BF%E5%9B%BE/"},{"categories":["前端菜鸟"],"content":"Linters and Formatters Prettier ESLint StardardJS ","date":"2022-11-15","objectID":"/liushu258/%E5%89%8D%E7%AB%AF%E8%B7%AF%E7%BA%BF%E5%9B%BE/:9:3","tags":["路线图"],"title":"前端路线图","uri":"/liushu258/%E5%89%8D%E7%AB%AF%E8%B7%AF%E7%BA%BF%E5%9B%BE/"},{"categories":["前端菜鸟"],"content":"Pick a Framework ","date":"2022-11-15","objectID":"/liushu258/%E5%89%8D%E7%AB%AF%E8%B7%AF%E7%BA%BF%E5%9B%BE/:10:0","tags":["路线图"],"title":"前端路线图","uri":"/liushu258/%E5%89%8D%E7%AB%AF%E8%B7%AF%E7%BA%BF%E5%9B%BE/"},{"categories":["前端菜鸟"],"content":"React.js Redux MobX ","date":"2022-11-15","objectID":"/liushu258/%E5%89%8D%E7%AB%AF%E8%B7%AF%E7%BA%BF%E5%9B%BE/:10:1","tags":["路线图"],"title":"前端路线图","uri":"/liushu258/%E5%89%8D%E7%AB%AF%E8%B7%AF%E7%BA%BF%E5%9B%BE/"},{"categories":["前端菜鸟"],"content":"Angular RxJS NNgRx ","date":"2022-11-15","objectID":"/liushu258/%E5%89%8D%E7%AB%AF%E8%B7%AF%E7%BA%BF%E5%9B%BE/:10:2","tags":["路线图"],"title":"前端路线图","uri":"/liushu258/%E5%89%8D%E7%AB%AF%E8%B7%AF%E7%BA%BF%E5%9B%BE/"},{"categories":["前端菜鸟"],"content":"Vue.js VueX ","date":"2022-11-15","objectID":"/liushu258/%E5%89%8D%E7%AB%AF%E8%B7%AF%E7%BA%BF%E5%9B%BE/:10:3","tags":["路线图"],"title":"前端路线图","uri":"/liushu258/%E5%89%8D%E7%AB%AF%E8%B7%AF%E7%BA%BF%E5%9B%BE/"},{"categories":["前端菜鸟"],"content":"modern CSS Styled Components CSS Modules Styled JSX Emotion Radium Glamorous ","date":"2022-11-15","objectID":"/liushu258/%E5%89%8D%E7%AB%AF%E8%B7%AF%E7%BA%BF%E5%9B%BE/:11:0","tags":["路线图"],"title":"前端路线图","uri":"/liushu258/%E5%89%8D%E7%AB%AF%E8%B7%AF%E7%BA%BF%E5%9B%BE/"},{"categories":["前端菜鸟"],"content":"Web Components HTML Templates Custom Elements Shadow DOM ","date":"2022-11-15","objectID":"/liushu258/%E5%89%8D%E7%AB%AF%E8%B7%AF%E7%BA%BF%E5%9B%BE/:12:0","tags":["路线图"],"title":"前端路线图","uri":"/liushu258/%E5%89%8D%E7%AB%AF%E8%B7%AF%E7%BA%BF%E5%9B%BE/"},{"categories":["前端菜鸟"],"content":"Css Frameworks JS based and better to use with your framework based JavaScript applications Reactstrop Material UI Tailwind CSS Chakra UI CSS first frameworks which don’t come with JavaScript components by default Bootstrap MaterializeCSS Bulma ","date":"2022-11-15","objectID":"/liushu258/%E5%89%8D%E7%AB%AF%E8%B7%AF%E7%BA%BF%E5%9B%BE/:13:0","tags":["路线图"],"title":"前端路线图","uri":"/liushu258/%E5%89%8D%E7%AB%AF%E8%B7%AF%E7%BA%BF%E5%9B%BE/"},{"categories":["前端菜鸟"],"content":"Testing your apps You can fill all your testing needs with just these. Jest react-testing-library Cypress Enzyme Learn the difference between Unit, Integration and Functional tests and learn how to write them with the tools listed on the left, Jasmine Mocha Chai Avo ","date":"2022-11-15","objectID":"/liushu258/%E5%89%8D%E7%AB%AF%E8%B7%AF%E7%BA%BF%E5%9B%BE/:14:0","tags":["路线图"],"title":"前端路线图","uri":"/liushu258/%E5%89%8D%E7%AB%AF%E8%B7%AF%E7%BA%BF%E5%9B%BE/"},{"categories":["前端菜鸟"],"content":"Type Checkers TypeScript Flow ","date":"2022-11-15","objectID":"/liushu258/%E5%89%8D%E7%AB%AF%E8%B7%AF%E7%BA%BF%E5%9B%BE/:15:0","tags":["路线图"],"title":"前端路线图","uri":"/liushu258/%E5%89%8D%E7%AB%AF%E8%B7%AF%E7%BA%BF%E5%9B%BE/"},{"categories":["前端菜鸟"],"content":"Progressive Web Apps Learn different Web APIs used in PWAs Storage Web Sockets Service Workers Location Notifications DeviceOrientation Payments Credentials Calculating,Measuring and improving performance PRPL Pattern RAIL Model Performance Metrics Using Lighthouse Using Dev Tools ","date":"2022-11-15","objectID":"/liushu258/%E5%89%8D%E7%AB%AF%E8%B7%AF%E7%BA%BF%E5%9B%BE/:16:0","tags":["路线图"],"title":"前端路线图","uri":"/liushu258/%E5%89%8D%E7%AB%AF%E8%B7%AF%E7%BA%BF%E5%9B%BE/"},{"categories":["前端菜鸟"],"content":"server side redering(SSR) React.js Next.js After.js Angular Universal Vue.js nuxt.js ","date":"2022-11-15","objectID":"/liushu258/%E5%89%8D%E7%AB%AF%E8%B7%AF%E7%BA%BF%E5%9B%BE/:17:0","tags":["路线图"],"title":"前端路线图","uri":"/liushu258/%E5%89%8D%E7%AB%AF%E8%B7%AF%E7%BA%BF%E5%9B%BE/"},{"categories":["前端菜鸟"],"content":"GraphQL Apollo Relay Modern ","date":"2022-11-15","objectID":"/liushu258/%E5%89%8D%E7%AB%AF%E8%B7%AF%E7%BA%BF%E5%9B%BE/:18:0","tags":["路线图"],"title":"前端路线图","uri":"/liushu258/%E5%89%8D%E7%AB%AF%E8%B7%AF%E7%BA%BF%E5%9B%BE/"},{"categories":["前端菜鸟"],"content":"Static Site Gennerators Next.js GatsbyJS Nuxt.js Vuepress Jekyll Hugo ","date":"2022-11-15","objectID":"/liushu258/%E5%89%8D%E7%AB%AF%E8%B7%AF%E7%BA%BF%E5%9B%BE/:19:0","tags":["路线图"],"title":"前端路线图","uri":"/liushu258/%E5%89%8D%E7%AB%AF%E8%B7%AF%E7%BA%BF%E5%9B%BE/"},{"categories":["前端菜鸟"],"content":"Mobile Applications React Native NativeScript Flutter lonic ","date":"2022-11-15","objectID":"/liushu258/%E5%89%8D%E7%AB%AF%E8%B7%AF%E7%BA%BF%E5%9B%BE/:20:0","tags":["路线图"],"title":"前端路线图","uri":"/liushu258/%E5%89%8D%E7%AB%AF%E8%B7%AF%E7%BA%BF%E5%9B%BE/"},{"categories":["前端菜鸟"],"content":"Desktop Applications Electron Carlo Proton Native ","date":"2022-11-15","objectID":"/liushu258/%E5%89%8D%E7%AB%AF%E8%B7%AF%E7%BA%BF%E5%9B%BE/:21:0","tags":["路线图"],"title":"前端路线图","uri":"/liushu258/%E5%89%8D%E7%AB%AF%E8%B7%AF%E7%BA%BF%E5%9B%BE/"},{"categories":["前端菜鸟"],"content":"web assembly ","date":"2022-11-15","objectID":"/liushu258/%E5%89%8D%E7%AB%AF%E8%B7%AF%E7%BA%BF%E5%9B%BE/:22:0","tags":["路线图"],"title":"前端路线图","uri":"/liushu258/%E5%89%8D%E7%AB%AF%E8%B7%AF%E7%BA%BF%E5%9B%BE/"},{"categories":["前端菜鸟"],"content":"keep learnning ","date":"2022-11-15","objectID":"/liushu258/%E5%89%8D%E7%AB%AF%E8%B7%AF%E7%BA%BF%E5%9B%BE/:23:0","tags":["路线图"],"title":"前端路线图","uri":"/liushu258/%E5%89%8D%E7%AB%AF%E8%B7%AF%E7%BA%BF%E5%9B%BE/"},{"categories":["前端菜鸟"],"content":"兴趣是最好的老师 量变到质变：从基础开始，技术需要沉淀 总结和分享技术 对业务和对需求的思考，技术都是服务与业务的 行业同龄人比较，了解自己的不足 成为多个方面的专家 参加技术分享会，了解最新的知识架构 引领自己的未来，走出属于自己的技术之路 学习路线： 计算机基础知识等概念 HTML：语法、语义化；CSS：语法、布局、媒体查询、CSS3 JavaScript: 语法、基础的数据结构、Web APIS 、ES6+ 、模块化、TypeScript 包管理工具：npm yarn CSS进阶： CSS预处理：SASS LESS PostCSS CSS 框架 CSS架构规范：OOCSS BEM SMACSS 构建工具： 代码校验工具：ESLInt StyleLint 模块打包工具：Webpack Rollup Parcel 任务运行器：npm scripts Makefile Gulp Grunt 框架 Vue.js React.js Angular 持续学习： Node.js 服务端渲染 渐进式Web应用 静态站点生成器 桌面应用、移动应用等等 ","date":"2022-11-15","objectID":"/liushu258/%E5%A6%82%E4%BD%95%E5%AD%A6%E4%B9%A0%E5%89%8D%E7%AB%AF/:0:0","tags":["100道前端面试真题课程"],"title":"如何学习前端","uri":"/liushu258/%E5%A6%82%E4%BD%95%E5%AD%A6%E4%B9%A0%E5%89%8D%E7%AB%AF/"},{"categories":["前端菜鸟"],"content":"必读书籍 ","date":"2022-11-15","objectID":"/liushu258/%E5%A6%82%E4%BD%95%E5%AD%A6%E4%B9%A0%E5%89%8D%E7%AB%AF/:1:0","tags":["100道前端面试真题课程"],"title":"如何学习前端","uri":"/liushu258/%E5%A6%82%E4%BD%95%E5%AD%A6%E4%B9%A0%E5%89%8D%E7%AB%AF/"},{"categories":["前端菜鸟"],"content":"进阶指南 端正学习态度:「专注在一件事上，精益求精、持之以恒的态度和行动，则是最为稀少与珍贵的。」 学习态度是最重要的如果你没有一个好的学习态度就不要浪费时间学习了 整理学习资料 官方权威的资料: MDN W3C 是入门最好的网站. MDN W3C 权威资料进入入门 掌握 HTML CSS JS 权威资料讲解的知识点更加详细,对以后的进阶非常有帮助( 强烈推荐通过一些基础视频入门 然后看MDN的教学 可以很好的掌握基础 ) ES6 推荐看 阮一峰的《ES6入门教程》 巩固基础 通过视频: 慕课网 妙味课堂 极客时间 学习基础的实战，如果英语好推荐看国外的视频教程 CSS3 学习推荐 https://jspang.com/detailed?id=19 移动端的布局方案 极客时间:《重学前端》专栏 大量的练习:推荐到freecodecamp 中练习里面提供了大量的练习资料 CSS 选择器练习: MDN的练习比较经典 掌握了这几个练习题css就可以彻底掌握 JS 基础练习,可以去实现原生组件比如轮播图组件等等，写几个小游戏将js掌握牢固 基础进阶 JS:强烈推荐《你不知道的JS》系列 将这几本书反复看 可以将JS掌握通透。 CSS: 《CSS深入解析》 《CSS揭秘》掌握CSS原理以及常用的布局方案 数据结构与算法 学习完javascript之后，看《学习JS 数据结构与算法》一书必须要掌握最基础的数据结构与算法，这样后期不管是学习框架还是源码都打牢固了基础，学习起来会更加轻松 设计模式 设计模式也是必须要掌握的，前端流行的框架就是：数据结构+算法+设计模式 推荐阅读 《JavaScript设计模式与开发实践》，如果你看不下书的话也可以去买视频学习javaScript的设计模式课程 去阅读JQuery、vue的源码，尝试手写一遍， 理解JavaScript的设计模式实践 尝试去封装组件库，非常考验设计模式 框架学习 如果上述的知识你已经全部掌握了那么框架的学习对你来说易如反掌 Vue 先看官方的文档 React 先看官方的文档 掌握框架的基本使用 通过视频或者实战书籍,实战学习框架 了解企业级项目的开发流程：项目的架构、开发流程、版本控制、部署等等 熟练掌握框架后再学习框架的原理 最好先精通自己感兴趣的一门框架 如何掌握知识点 知识点划分为一个大知识点 每听一小节 进行实战 然后总结文稿 学完大知识点后，自己手动画脑图或流程图输出文章 博客分享掘金 如何写文章 从下面几点,来写你学习到的知识点,对知识点更好的掌握 「是什么？」 「为什么？即它解决了什么问题。」 「优缺点。」 「对比同类技术的不同/相同点。」 「如何使用？」 「如何解决问题的？即内部的实现原理。」 「归纳时注重核心知识与关键细节，并尝试去类比不同领域或不同学科之间的知识。」 「重要的过程、结论。」 如何读书 第一遍：「细读，目的在于完整阅读全书，并且划出重点，写上读书笔记。」 一个月后读第二遍：「扫读，主要快速翻阅第一遍阅读时做的笔记和划的重点，目的在于加深记忆。」 半年后第三遍：「忆读，读的时候只看目录，然后去回想内容，如果回想不起来，再去进行扫读。这样三遍下来，基本上一本书的核心内容就能够很好的吸收。」 学习在于坚持 「只有真正深入到一个领域，才能培养出对其的真正兴趣。如果对一件事的了解不深、不透，总是浅尝辄止，那自然体会不到这件事的妙处，也自然不会产生持久的兴趣。这让人容易滑入一个死循环：了解不够导致兴趣不足，而兴趣不足又无法加深对它的了解。」 「如果我能长期地坚持去做一件事，一定是这件事带给我的丰盈感和满足感超过了我的所有付出，一定是这件事日日夜夜萦绕在我的心头让我欲罢不能，一定是这件事唤起了我内心深处最强烈的兴趣」。 技术之外 《软技能》除了技术我们还有掌握软技能 如何沟通 以及如何报告 职业生涯 《跃迁》从技术到管理 面试 是否一份简历通发？ - 不要一份简历通发 是否了解公司的职位以及业务了解？ 是否有过模拟自测/面试？ - 这个很重要 不要盲目跟风、夸大其词、自负、细节决定成败 面试技巧：JD描述、简历、模拟面试、总结、行业与生态、一面(基础面)、二面(业务面)等等 自我提升规划 设计3-5年的规划 TodoList 规划学习计划 学习的进展速度，及时调整，抓重避轻 给自己一点暗示(你是最棒的、你可以做到) 培养一点兴趣与爱好，对自己好一点 高级进阶-静态前端扩展软技能以及后端技能 《绿皮书》若能把绿皮书读完一遍 那么js就没什么了 已经彻底掌握了 前端工程化 微前端 团队管理 前端监控平台 数据可视化 性能优化 自动化测试 早起打卡习惯养成 6：00 学习任何技术就是：看、练、悟，技术更要掌握核心不变的知识：数据结构、算法、设计模式、网络、操作系统 如何准备面试 业务背景 淘宝内部最大创新项目之一，大团队已有百人规模，大部分项目处于保密阶段，前景远大。 职位描述 1.负责组件库与业务页面开发。 2.带领团队完成技术产品实现。 3.负责大型多应用架构设计。 4.利用前端技术与服务端协同完成团队业务目标。 职位要求 0.掌握图形学，webgl或熟练使用threejs框架，熟练canvas相关渲染及动画操作的优先。 1.熟练掌握JavaScript。 2.熟悉常用工程化工具，掌握模块化思想和技术实现方案。 3.熟练掌握React前端框架，了解技术底层。同时了解vue以及angular等其他框架者优先。 4.熟练掌握react生态常用工具，redux/react-router等。 5.熟悉各种Web前端技术，包括HTML/XML/CSS等，有基于Ajax的前端应用开发经验。 6.有良好的编码习惯，对前端技术有持续的热情，个性乐观开朗,逻辑性强，善于和各种背景的人合作。 7.具有TS/移动设备上前端开发/NodeJS/服务端开发等经验者优先。 ★ 翻译一下JD 为什么起这个标题呢？因为有很多人看到职位描述，可能就在和自己做的事情一一比对，把关键字都核对上。而很多前端同学看到职位要求第一条里的图形学，可能就开始打退堂鼓了。或者看到几个关键字自己都认识，就觉得没问题，还挺简单的。 就这样望而却步真的好吗？为什么职位描述看着简单，面试却这么难呢？你真的读懂这份职位描述了吗？ 现在，不妨先停一下，就上面的问题，我们来细细品一下。 什么叫读懂职位描述呢？从我个人的理解，读懂职位描述，应该是读懂这个职位需要哪些基础能力，以及可能遇到哪些挑战。我们写自己简历的时候，“精通react”和“熟练使用react”，相信大家不会随意去写。同样的，JD 里面的：掌握、熟练掌握、了解、熟悉，也不是随意写的，这代表了团队对新同学的能力要求。 回想写自己简历的时候，我们会对这个前缀扪心自问一下。因为会担心一旦写了精通，面试官的问题会更难，甚至觉得只有源码倒背如流的人，才能称得上精通。当然也会有同学非常自信，用 react 做过几个项目，就写上了精通 react 。 这两种都可以称为精通，也都不可以。没有客观标准，又怎么去衡量呢？而标准在哪里呢？所以在这里，我从阿里面试官角度，给出我认为的标准，尽可能的做到客观可量化。那么，基于上面这份职位标准，我来翻译一下职位要求： 首先，总览全部的要求，会发现这个职位虽然提到了3d相关的技能，但是大部分却是应用开发相关的能力，所以这个职位并不是想找专业的3d领域同学，而是需要一个工程化能力强，对3d有了解的同学。 0.掌握图形学，webgl 或熟练使用threejs框架，熟练canvas相关渲染及动画操作的优先。 初级： 学习过图形学相关知识，知道矩阵等数学原理在动画中的作用，知道三维场景需要的最基础的构成，能用 threejs 搭 3d 场景，知道 webgl 和 threejs 的关系。 知道 canvas 是干嘛的，聊到旋转能说出 canvas 的 api。 知道 css 动画，css 动画属性知道关键字和用法(换句话说，电话面试会当场出题要求口喷 css 动画，至少能说对大概，而不是回答百度一下就会用)。 知道 js 动画，能说出1~2个社区 js 动画库，知道js动画和css动画优缺点以及适用场景。 知道raf和其他达到60fps的方法。 中级： 如果没有 threejs，你也能基于 webgl 自己封装一个简单的 threejs 出来。 聊到原理能说出四元数，聊到鼠标操作能提到节流，聊到性能能提到restore，聊到帧说出 raf 和 timeout 的区别，以及各自在优化时候的作用。 知道怎样在移动端处理加载问题，渲染性能问题。 知道如何结合 native 能力优化性能。 知道如何排查性能问题。对 chrome 动画、3d、传感器调试十分了解。 高级： 搭建过整套资源加载优化方案，能说明白整体方案的各个细节，包括前端、客户端、服务端分别需要实现哪些功能点、依赖哪些基础能力，以及如何配合。 设计并实现过前端动画引擎，能说明白一个复杂互动项目的技术架构，知道需要哪些核心模块，以及这些模块间如何配合。 有自己实现的动画相关技术方案产出，这套技术方案必须是解决明确的业务或技术难点问题的。为了业务快速落地而封装一个库，不算这里的技术方案。如果有类似社区方案，必须能从原理上说明白和竞品的差异，各自优劣，以及技术选型的原因。 1.熟练掌握 JavaScript。 初级： JavaScript 各种概念都得了解，《JavaScript 语言精粹》这本书的目录都得有概念，并且这些核心点都能脱口而出是什么。这里列举一些做参考： 知道组合寄生继承，知道 class 继承。 知道怎么创","date":"2022-11-15","objectID":"/liushu258/%E5%A6%82%E4%BD%95%E5%AD%A6%E4%B9%A0%E5%89%8D%E7%AB%AF/:2:0","tags":["100道前端面试真题课程"],"title":"如何学习前端","uri":"/liushu258/%E5%A6%82%E4%BD%95%E5%AD%A6%E4%B9%A0%E5%89%8D%E7%AB%AF/"},{"categories":["前端菜鸟"],"content":"破局的方法 好了，如果看到这里，并没有把你劝退的话，那么让我们来点希望的曙光。这里用一句阿里土话来给大家一些安慰：不难，要你干嘛？ 开篇我提到面试过那么多同学之后，我最大的感受是惋惜，因为有很多同学在我看来就差一点点，他有足够的个人能力，可能只是没有找到感觉。这里我例举两个比较典型的问题。 ★ 什么是亮点？ 我相信这是很多同学心中的疑惑，而且事实上，我看到很多简历下面的面试记录都会写：缺乏亮点，暂不考虑。如果仔细看了上文，到这里还有这个疑惑，那么我觉得你需要再静下心来感受一下。 这里我不对亮点做明确的表述，我举一个例子来让大家更有体感一些： A: 负责公司前端工作，使用 webpack 打包代码并发布线上。使用 webpack 配置对整体性能做优化，用 happypack 加快了打包速度。 B: 建设内部云构建体系，产出通用命令行指令工具；将发布、环境切换、快速回滚能力平台化，保证了线上环境稳定性；同时将研发流程量化管控，每周产出研发效能报告。 如果你是面试官，在简历的大海里看一个项目描述，什么最吸引你的眼球呢？是webpack，happypack的关键字吗？还是一句话就让你想到这件事的复杂性，和这个系统带来的巨大价值？ ","date":"2022-11-15","objectID":"/liushu258/%E5%A6%82%E4%BD%95%E5%AD%A6%E4%B9%A0%E5%89%8D%E7%AB%AF/:3:0","tags":["100道前端面试真题课程"],"title":"如何学习前端","uri":"/liushu258/%E5%A6%82%E4%BD%95%E5%AD%A6%E4%B9%A0%E5%89%8D%E7%AB%AF/"},{"categories":["前端菜鸟"],"content":"技能点描述 具备3年以上的前端开发经验以及3年的移动端Android开发经验\u0026WebView技术融合经验 熟练掌握JavaScript、HTML、CSS，可以脱离框架独立开发复杂的项目 熟练掌握Vue框架以及原理，有基于全家桶构建通用前端框架经验 熟悉前端组件库的设计，主导设计公司内部前端组件库的经验 熟练掌握Java、C++、TypeScript 高级类型编程经验 熟悉前端工程化，有前端构建工具编写经验 了解Flutter跨平台开发 具有NodeJs，SpringBoot后端应用开发经验 有良好的编码习惯，对前端技术有持续的热情 ","date":"2022-11-15","objectID":"/liushu258/%E5%A6%82%E4%BD%95%E5%AD%A6%E4%B9%A0%E5%89%8D%E7%AB%AF/:4:0","tags":["100道前端面试真题课程"],"title":"如何学习前端","uri":"/liushu258/%E5%A6%82%E4%BD%95%E5%AD%A6%E4%B9%A0%E5%89%8D%E7%AB%AF/"}]